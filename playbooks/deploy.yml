---
- name: Create self-signed certificate for nginx
  import_playbook: openssl_certificates.yml

- name: Deploy container with podman
  hosts: all
  vars_files:
    - ~/vault.yml

  pre_tasks:
    # - name: Git checkout ansible config
    #   become: true
    #   git:
    #     repo: 'https://github.com/CDL-Uni-Vienna/ansible-photonq.git'
    #     dest: /opt/ansible-photonq
    #     update: no
    - name: Login podman for 'root'
      become: true
      become_user: root
      containers.podman.podman_login:
        username: "{{ podman_login_username }}"
        password: "{{ podman_login_password }}"
        registry: "{{ podman_login_registry }}"
    - name: Login podman for 'podman'
      become: true
      become_user: podman
      containers.podman.podman_login:
        username: "{{ podman_login_username }}"
        password: "{{ podman_login_password }}"
        registry: "{{ podman_login_registry }}"
    - name: Run container
      become: true
      containers.podman.podman_container:
        name: nginx_template
        image: nginx
        state: started
    - name: Copy nginx config to /etc/nginx
      become: true
      shell: podman cp nginx_template:/etc/nginx /etc/nginx
    # - name: Create symbolic link to etc config
    #   become: true
    #   file:
    #     src: "/opt/ansible-photonq/etc/nginx"
    #     dest: "/etc/nginx"
    #     state: link
    - name: Run container
      containers.podman.podman_container:
        name: nginx_template
        state: absent
    - name: Template nginx config to /etc/nginx/conf.d
      become: true
      template:
        src: ../templates/nginx-confd.conf.j2
        dest: "/etc/nginx/conf.d/{{ item }}.conf"
        # mode: '0644'
      with_items:
        - "{{ domains }}"

  roles:
    # ansible-galaxy install -r requirements.yml
    - role: kleberbaum.podman
      podman_services:
        ## Podman Variables
        #
        # Required: The image name to download
          
        # Deploy nginx as Reverse proxy
        - image_name: nginx
          # Optional: The tag to download. This often corresponds to
          # version, defaults to 'latest'
          image_tag: mainline
          # Optional: Description that will be added to the SystemD service file
          description: Reverse proxy
          # Optional: List of ports to publish. Takes the same form as the
          # podman CLI that is to say: host-port:container-port. This is
          # just piped directly to the '--publish' flag so binding IPs work
          # as well (ex. '127.0.0.1:8080:80'). Defaults to none.
          publish:
            - '80:80'
            - '443:443'
          # Optional: String name of the network to be passed as the --network flag.
          # If the network does not exist it will be created. This can be used to allow
          # multiple services to network with each other. See Networking for caveats
          #network: host
          # Optional: List of volumes to mount. Takes the same form as the
          # podman CLI host-directory:container-directory and as shown below
          # mount options are allowed.
          volumes:
            - '/etc/nginx/:/etc/nginx/:Z,ro'
            - '/etc/ssl/nginx/:/etc/ssl/nginx/:Z,ro'
          # Optional: Define a hostname for podman's hostname flag. Set's
          # the containers hostname, default is none.
          #hostname: chasinglogic.io
          # Optional: A list of environment variables to add to the
          # container.  Default is none.
          #env_vars:
          #  - SOME_VAR=SOME_VALUE

          ## SystemD Variables
          #
          # Optional: Define the restart policy for this service. Default is always
          restart: always
          # Optional: Define the time to wait between restarts of this service in seconds. Default is 30
          restart_sec: 30
          # Optional: Define the actual name used for the SystemD
          # service. {{ Defaults to image_name + '-podman' }}
          service_name: nginx
          # Optional: Define the targets / services this SystemD service
          # must start after. This is a YAML list not a string.
          after:
            - network.target
          # Optional: Define the timeout for starting this SystemD
          # service. For valid values see 'man systemd.service'. Defaults to
          # 5 minutes.
          timeout_start_sec: 5m
          # Optional: Define an install section for the SystemD
          # service. Currently only wanted_by is supported. See 'man
          # systemd.unit' for a description of this section. Default is none
          # and most users should not need this.
          install:
            wanted_by:
              - multi-user.target
          # Optional: define the user and group for the service
          # file. Default is omission which is equivalent to root on most
          # systems.
          user: root
          group: root
        
        # Deploy PhotonQ Node App
        - image_name: ghcr.io/cdl-uni-vienna/photonq-square
          # Optional: The tag to download. This often corresponds to
          # version, defaults to 'latest'
          image_tag: latest
          # Optional: Description that will be added to the SystemD service file
          description: PhotonQ Frontend
          # Optional: List of ports to publish. Takes the same form as the
          # podman CLI that is to say: host-port:container-port. This is
          # just piped directly to the '--publish' flag so binding IPs work
          # as well (ex. '127.0.0.1:8080:80'). Defaults to none.
          publish:
            - '8080:8080'
          # Optional: String name of the network to be passed as the --network flag.
          # If the network does not exist it will be created. This can be used to allow
          # multiple services to network with each other. See Networking for caveats
          network: host
          # Optional: Define a hostname for podman's hostname flag. Set's
          # the containers hostname, default is none.
          #hostname: photonqfront

          ## SystemD Variables
          #
          # Optional: Define the restart policy for this service. Default is always
          restart: always
          # Optional: Define the time to wait between restarts of this service in seconds. Default is 30
          restart_sec: 30
          # Optional: Define the actual name used for the SystemD
          # service. {{ Defaults to image_name + '-podman' }}
          service_name: photonqsquare
          # Optional: Define the targets / services this SystemD service
          # must start after. This is a YAML list not a string.
          after:
            - network.target
          # Optional: Define the timeout for starting this SystemD
          # service. For valid values see 'man systemd.service'. Defaults to
          # 5 minutes.
          timeout_start_sec: 5m
          # Optional: Define an install section for the SystemD
          # service. Currently only wanted_by is supported. See 'man
          # systemd.unit' for a description of this section. Default is none
          # and most users should not need this.
          install:
            wanted_by:
              - multi-user.target
          # Optional: define the user and group for the service
          # file. Default is omission which is equivalent to root on most
          # systems.
          user: podman
          group: podman
          
        # Deploy Postgres Database
        - image_name: postgres
          # Optional: The tag to download. This often corresponds to
          # version, defaults to 'latest'
          image_tag: 14-alpine
          # Optional: Description that will be added to the SystemD service file
          description: PhotonQ Frontend
          # Optional: List of ports to publish. Takes the same form as the
          # podman CLI that is to say: host-port:container-port. This is
          # just piped directly to the '--publish' flag so binding IPs work
          # as well (ex. '127.0.0.1:8080:80'). Defaults to none.
          publish:
            - '5432:5432'
          # Optional: String name of the network to be passed as the --network flag.
          # If the network does not exist it will be created. This can be used to allow
          # multiple services to network with each other. See Networking for caveats
          network: host
          # Optional: Define a hostname for podman's hostname flag. Set's
          # the containers hostname, default is none.
          #hostname: photonqfront
          env_vars:
            - POSTGRES_DB={{ cdlwebservice_db.db }}
            - POSTGRES_USER={{ cdlwebservice_db.user }}
            - POSTGRES_PASSWORD={{ cdlwebservice_db.pass }}

          ## SystemD Variables
          #
          # Optional: Define the restart policy for this service. Default is always
          restart: always
          # Optional: Define the time to wait between restarts of this service in seconds. Default is 30
          restart_sec: 30
          # Optional: Define the actual name used for the SystemD
          # service. {{ Defaults to image_name + '-podman' }}
          service_name: cdlwebservicepostgres
          # Optional: Define the targets / services this SystemD service
          # must start after. This is a YAML list not a string.
          after:
            - network.target
          # Optional: Define the timeout for starting this SystemD
          # service. For valid values see 'man systemd.service'. Defaults to
          # 5 minutes.
          timeout_start_sec: 5m
          # Optional: Define an install section for the SystemD
          # service. Currently only wanted_by is supported. See 'man
          # systemd.unit' for a description of this section. Default is none
          # and most users should not need this.
          install:
            wanted_by:
              - multi-user.target
          # Optional: define the user and group for the service
          # file. Default is omission which is equivalent to root on most
          # systems.
          user: podman
          group: podman
          
          # Deploy Django
        - image_name: ghcr.io/cdl-uni-vienna/cdl_webservice
          # Optional: The tag to download. This often corresponds to
          # version, defaults to 'latest'
          image_tag: latest
          # Optional: Description that will be added to the SystemD service file
          description: PhotonQ Webservice
          # Optional: List of ports to publish. Takes the same form as the
          # podman CLI that is to say: host-port:container-port. This is
          # just piped directly to the '--publish' flag so binding IPs work
          # as well (ex. '127.0.0.1:8080:80'). Defaults to none.
          publish:
            - '8000:8000'
          # Optional: String name of the network to be passed as the --network flag.
          # If the network does not exist it will be created. This can be used to allow
          # multiple services to network with each other. See Networking for caveats
          network: host
          # Optional: Define a hostname for podman's hostname flag. Set's
          # the containers hostname, default is none.
          #hostname: photonqdjango
          env_vars:
            - DATABASE_URL=postgres://{{ cdlwebservice_db.user }}:{{ cdlwebservice_db.pass }}@10.88.0.1/{{ cdlwebservice_db.db }}

          ## SystemD Variables
          #
          # Optional: Define the restart policy for this service. Default is always
          restart: always
          # Optional: Define the time to wait between restarts of this service in seconds. Default is 30
          restart_sec: 30
          # Optional: Define the actual name used for the SystemD
          # service. {{ Defaults to image_name + '-podman' }}
          service_name: cdlwebservice
          # Optional: Define the targets / services this SystemD service
          # must start after. This is a YAML list not a string.
          after:
            - network.target
          # Optional: Define the timeout for starting this SystemD
          # service. For valid values see 'man systemd.service'. Defaults to
          # 5 minutes.
          timeout_start_sec: 5m
          # Optional: Define an install section for the SystemD
          # service. Currently only wanted_by is supported. See 'man
          # systemd.unit' for a description of this section. Default is none
          # and most users should not need this.
          install:
            wanted_by:
              - multi-user.target
          # Optional: define the user and group for the service
          # file. Default is omission which is equivalent to root on most
          # systems.
          user: podman
          group: podman

  post_tasks:
    - name: Logout podman for 'root'
      become: true
      become_user: root
      containers.podman.podman_logout:
        all: yes
    - name: Logout podman for 'podman'
      become: true
      become_user: podman
      containers.podman.podman_logout:
        all: yes
